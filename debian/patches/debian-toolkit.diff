--- a/scripts/apache-toolkit_web_gui.conf
+++ b/scripts/apache-toolkit_web_gui.conf
@@ -83,23 +83,11 @@
     Options +FollowSymLinks -MultiViews +ExecCGI
     DirectoryIndex index.cgi index.php index.html
     AddHandler cgi-script .cgi
-    <IfVersion < 2.4>
-      Order allow,deny
-      Allow from all
-    </IfVersion>
 
-    <IfVersion >= 2.4>
-      AuthType Basic
-      AuthName "Password Required"
-      AuthUserFile /etc/perfsonar/toolkit/psadmin.htpasswd
-      Require valid-user
-    </IfVersion>
-    <IfVersion < 2.4>
-      AuthShadow on
-      AuthType Basic
-      AuthName "Password Required"
-      Require group psadmin
-    </IfVersion>
+    AuthType Basic
+    AuthName "Password Required"
+    AuthUserFile /etc/perfsonar/toolkit/psadmin.htpasswd
+    Require valid-user
 </Location>
 
 # Allow indexes on logs
@@ -113,23 +101,11 @@
     DirectoryIndex index.cgi index.php index.html
     AddHandler cgi-script .cgi
     AllowOverride All
-    <IfVersion < 2.4>
-      Order allow,deny
-      Allow from all
-    </IfVersion>
 
-    <IfVersion >= 2.4>
-      AuthType Basic
-      AuthName "Password Required"
-      AuthUserFile /etc/perfsonar/toolkit/psadmin.htpasswd
-      Require valid-user
-    </IfVersion>
-    <IfVersion < 2.4>
-      AuthShadow on
-      AuthType Basic
-      AuthName "Password Required"
-      Require group psadmin
-    </IfVersion>
+    AuthType Basic
+    AuthName "Password Required"
+    AuthUserFile /etc/perfsonar/toolkit/psadmin.htpasswd
+    Require valid-user
 </Directory>
 
 ##
--- a/scripts/manage_users
+++ b/scripts/manage_users
@@ -22,6 +22,9 @@
 import readline           # Improve the usability of raw_input. Let you use those fancy "arrow" keys
 import pwd                # For checking the existence of a user before setting pw. Could cause nasty infinite loop.
 
+htpasswd_file = "/etc/perfsonar/toolkit/psadmin.htpasswd"
+htpasswd_exists = os.path.isfile(htpasswd_file)
+
 class menuOption:
     def __init__(self, displayText, executable):
         self.displayText = displayText
@@ -32,45 +35,49 @@
 def add_user():
     # We don't want to get in the way here, just let the shell handle this
     done = False
-   
+
     ans = raw_input("Enter the user whose account you'd like to add. Just hit enter to exit: ").strip()
     if not ans:
         return
 
     user = ans
 
-    ans = raw_input("Should this user be able to login via SSH? [yes] ").strip().upper()
-    if not ans:
-        ans = "YES"
+    if htpasswd_exists:
+        cmd = "htpasswd " + htpasswd_file + " " + user
+    else:
+        ans = raw_input("Should this user be able to login via SSH? [yes] ").strip().upper()
+        if not ans:
+            ans = "YES"
 
-    can_login = False
-    if ans[0] == "Y":
-        can_login = True
+        can_login = False
+        if ans[0] == "Y":
+            can_login = True
 
-    ans = raw_input("Should this user be able to login to the web interface? [yes] ").strip().upper()
-    if not ans:
-        ans = "YES"
+        ans = raw_input("Should this user be able to login to the web interface? [yes] ").strip().upper()
+        if not ans:
+            ans = "YES"
 
-    is_admin = False
-    if ans[0] == "Y":
-        is_admin = True
+        is_admin = False
+        if ans[0] == "Y":
+            is_admin = True
 
-    if (can_login):
-        cmd = "/usr/sbin/adduser -m"
-    else:
-        cmd = "/usr/sbin/adduser -M --shell /bin/false"
+        if (can_login):
+            cmd = "/usr/sbin/adduser -m"
+        else:
+            cmd = "/usr/sbin/adduser -M --shell /bin/false"
 
-    if is_admin:
-        cmd += " -G psadmin"
+        if is_admin:
+            cmd += " -G psadmin"
 
-    cmd += " " + user
+        cmd += " " + user
 
     retVal = os.system(cmd)
     if (retVal != 0):
         print Internet2Consts.YELLOW + "Error: couldn't add user " + user + Internet2Consts.NORMAL
         return
 
-    password(user)
+    if not htpasswd_exists:
+        password(user)
 
     return
 # End add_user
@@ -79,24 +86,27 @@
 def del_user():
     # We don't want to get in the way here, just let the shell handle this
     done = False
-   
+
     ans = raw_input("Enter the user whose account you'd like to remove. Just hit enter to exit: ").strip()
     if not ans:
         return
 
     user = ans
 
-    delete_home = False
+    if htpasswd_exists:
+        cmd = "htpasswd -D " + htpasswd_file + " " + user
+    else:
+        delete_home = False
 
-    if os.path.exists(os.path.join("/", "home", user)):
-        ans = raw_input("Would you like to delete "+user+"'s home directory? [yes] ").strip().upper()
-        if ans and ans[0] == "Y":
-            delete_home = True
-
-    cmd = "/usr/sbin/userdel"
-    if delete_home:
-        cmd += " -r"
-    cmd += " "+user
+        if os.path.exists(os.path.join("/", "home", user)):
+            ans = raw_input("Would you like to delete "+user+"'s home directory? [yes] ").strip().upper()
+            if ans and ans[0] == "Y":
+                delete_home = True
+
+        cmd = "/usr/sbin/userdel"
+        if delete_home:
+            cmd += " -r"
+        cmd += " "+user
 
     retVal = os.system(cmd)
 
@@ -107,24 +117,39 @@
 def password(user=None):
     # We don't want to get in the way here, just let the shell handle this
     done = False
-  
+
     if (user == None):
         ans = raw_input("Enter the user whose password you'd like to change. Just hit enter to exit: ").strip()
         if not ans:
             return
 
         user = ans
+        user_exists = True
 
-        try:
-            user_info = pwd.getpwnam(user)
-        except KeyError:
+        if htpasswd_exists:
+            retVal = os.system("grep -q '^" + user + ": " + htpasswd_file)
+            if int(retVal) != 0:
+                user_exists = False
+        else:
+            try:
+                user_info = pwd.getpwnam(user)
+            except KeyError:
+                user_exists = False
+
+        if not user_exists:
             print "User " + Internet2Consts.MAGENTA + user + Internet2Consts.NORMAL + " does not exist."
             return
 
     while not done:
         print "Please specify a password for the " + Internet2Consts.MAGENTA + user + Internet2Consts.NORMAL + " account."
-        retVal = os.system("/usr/bin/passwd " + user)
-   
+
+        if htpasswd_exists:
+            cmd = "htpasswd " + htpasswd_file + " " + user
+        else:
+            cmd = "/usr/bin/passwd " + user
+
+        retVal = os.system(cmd)
+
         if int(retVal) != 0:
             print Internet2Consts.YELLOW + "Couldn't set the password to what you specified. Please try again." + Internet2Consts.NORMAL
         else:
@@ -140,11 +165,11 @@
 # @return an initialized list of menu options
 def initialize():
     optionList = []
-    
+
     # Add a user
     item = menuOption("Add a new user", add_user)
     optionList.append(item)
-   
+
     # Delete the user
     item = menuOption("Delete a user", del_user)
     optionList.append(item)
@@ -152,19 +177,19 @@
     # Set passord
     item = menuOption("Change a user's password", password)
     optionList.append(item)
-    
+
     return optionList
 # End initialize
 
 # Displays the menu of things to setup
 def displayMenu():
     print "You may configure any of the options below with this program: "
-    
+
     for i, option in enumerate(menuOptions):
         print "\t" + str(i+1) + ". " + option.displayText
-        
+
     print "\t" + "0. exit"
-    
+
     return
 # End displayMenu
 
@@ -172,29 +197,29 @@
 # @param fileHandle the fileHandle we are working with (for the startup file)
 def mainLoop():
     done = False
-    
+
     while not done:
         displayMenu()
-                
+
         # Process the user's input
         try:
             choice = int(raw_input("Make a selection: ").strip())
         except ValueError, e:
             choice = -1 # Not valid
         print " "
-        
+
         # Negative numbers are invalid -- as are choices > the length of the choice list (Exit is not in the thing)
         if choice < 0 or choice > len(menuOptions):
             print Internet2Consts.YELLOW + "Invalid selection" + Internet2Consts.NORMAL
             continue
-        
+
         # Exit if choice is 0
         elif choice == 0:
             done = True
         else:
             menuOptions[choice-1].executable() # 0 is exit (so needs -1)
             print ""
-    
+
     return
 # End mainLoop
 
